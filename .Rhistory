N0     <- 1
lambda <- 2
time   <- 0:10
Nt <- N0*lambda^time
Nt
N0     <- 2
Nt <- N0*lambda^time
Nt
N0     <- 1
Nt <- N0*lambda^time
Nt
N0 <- c(10, 20, 30)
Nt.s <- sapply(N0, function(n) n * lambda^time)
Nt.s
lambda <- 2
time   <- 0:4
Nt.s <- sapply(N0, function(n) n * lambda^time)
Nt.s
matplot(time, Nt.s, pch = 1:3)
matplot(time, Nt.s, log="y", pch = 1:3)
lambdas <- c(0.5, 1, 1.5)
N0      <- 100
time    <- 0:3
lambdas <- c(0.5, 1, 1.5)
N.all <- sapply(lambdas, function(x) N0 * x^time)
N.all
matplot(time, N.all)
matplot(time, N.all, xlab= "years", ylab = "N", pch=1:3)
abline(h=N0, lty=3)
r   <- c(-0.03, -0.02, 0, 0.02, 0.03)
N0  <- 2
t   <- 1:100
cont.mat sapply(r function(ri) N0 * exp(ri * t))
cont.mat <- sapply(r function(ri) N0 * exp(ri * t))
cont.mat <- sapply(function(ri) N0 * exp(ri * t))
cont.mat <- sapply(ri, function(ri) N0 * exp(ri * t))
cont.mat <- sapply(r, function(ri) N0 * exp(ri * t))
matplot(t, cont.mat, type="l", col=1)
matplot(t, cont.mat, type="l", log="y")
library(primer)
install.packages("primer")
library("primer")
names(sparrow)
names(sparrows)
dir()
ls()
libraries()
library()
names(primer::sparrows)
names(sarrows)
names(sparrows)
library(primer)
names(sparrows)
library("primer")
library("primer")
names(sparrows)
primer-package
attach(sparrows)
library(primer)
library("primer")
names(sparrows)
data(sparrows)
attach(sparrows)
names(sparrows)
plot(Count ~ Year, typw='b')
plot(Count ~ Year, type='b')
sparrows
obs.R <- Count[-1]/Count[-length(Count)]
plot(obs.R ~ Year[-length(Count)])
abline(h=1, lty=3)
set.seed(3)
sim.Rs <- sample(x = obs.R, size = years, replace = TRUE)
years <- 50 # years to simulate
sim.Rs <- sample(x = obs.R, size = years, replace = TRUE)
sim.Rs
output <- numeric(years +1)
output[1] <- Count[Year = max(Year)]
for(t in 1:years)output[t + 1] <- {
output[t] * sim.Rs[t]
}
plot(0:years, output, type="b")
plot(0:years, output, type="l")
sim.Rs <- sample(x = obs.R, size = years, replace = TRUE) # create sample Rs from obs.R
output <- numeric(years +1)
output[1] <- Count[Year = max(Year)] # start simulation with the count value from the final year "max(year)" of the obs data
for(t in 1:years) output[t + 1] <- {
output[t] * sim.Rs[t]
}
plot(0:years, output, type="l")
output
rm(output)
output <- numeric(years + 1)
output[1] <- Count[Year == max(Year)] # start simulation with the count value from the final year "max(year)" of the obs data
for(t in 1:years) output[t + 1] <- {
output[t] * sim.Rs[t]
}
plot(0:years, output, type="l")
sim.RM <- matrix(sample(obs.R, sims * years, replace = TRUE), nrow = years, ncol = sims)
sims = 10
sim.RM <- matrix(sample(obs.R, sims * years, replace = TRUE), nrow = years, ncol = sims)
sim.RM
output[1] <- Count[Year == max(Year)]
output[1] <- Count[Year == max(Year)]
outmat <- sapply(1:sims, function(i) {
for (t in 1:years) output[t + 1] <- output[t] * sim.Rm[t,i] output
})
matplot(0:years, outmat, type="l")
outmat <- sapply(1:sims, function(i) {
for (t in 1:years) output[t + 1] <- output[t] * sim.Rm[t,i] output
})
outmat <- sapply(1:sims, function(i) {
for (t in 1:years) output[t + 1] <- output[t] * sim.Rm[t,i]
output
})
1:sims
1:years
outmat <- sapply(1:sims, function(i) {
for (t in 1:years) output[t + 1] <- output[t] * sim.RM[t,i]
output
})
matplot(0:years, outmat, type="l")
matplot(0:years, outmat, type="l". log="y")
matplot(0:years, outmat, type="l", log="y")
rd.v <- seq(1.3,  2.8, by =0.3)
t <- 15
Ns <- data.frame(sapply(rd.v, function(r) dlogistic(rd = r, t=t)))
Ns <- data.frame(sapply(rd.v, function(r) dlogistic(rd = r, t = t)))
?dlogistic()
??dlogistic()
library(primer)
Ns <- data.frame(sapply(rd.v, function(r) dlogistic(rd = r, t = t)))
matplot(0:t, Ns, type = "l", col = 1)
tmp <- data.frame(rd = as.factor(rd.v), t(Ns))
Ns2 <- reshape(tmp, varying = list(2:ncol(tmp)), idvar = "rd", v.names = "N", direction = "long")
library(lattice)
print(xyplot(N~time | rd, data = Ns2, type = "l", layout = c(3,2,1), col=1))
.85/14
0.060714*24
.000060714*24
.85*1000
14.07*1000000
850/14070000
.000060412*1000
.0604*24
28000*1000000
2.8e+10/(14.07*365)
